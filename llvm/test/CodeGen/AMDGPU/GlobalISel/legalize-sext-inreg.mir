# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx900 -run-pass=legalizer -global-isel-abort=0 %s -o - | FileCheck -check-prefix=GFX9 %s
# RUN: llc -O0 -mtriple=amdgcn-mesa-mesa3d -mcpu=fiji -run-pass=legalizer -global-isel-abort=0 %s -o - | FileCheck -check-prefix=GFX8 %s
# RUN: llc -O0 -mtriple=amdgcn-mesa-mesa3d -mcpu=tahiti -run-pass=legalizer -global-isel-abort=0 %s -o - | FileCheck -check-prefix=GFX6 %s

---
name: test_sext_inreg_s32_1
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s32_1
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX8-LABEL: name: test_sext_inreg_s32_1
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX6-LABEL: name: test_sext_inreg_s32_1
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: $vgpr0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = G_SEXT_INREG %0, 1
    $vgpr0 = COPY %1
...

---
name: test_sext_inreg_s32_2
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s32_2
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 30
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX8-LABEL: name: test_sext_inreg_s32_2
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 30
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX6-LABEL: name: test_sext_inreg_s32_2
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 30
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: $vgpr0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = G_SEXT_INREG %0, 2
    $vgpr0 = COPY %1
...

---
name: test_sext_inreg_s32_8
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s32_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX8-LABEL: name: test_sext_inreg_s32_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX6-LABEL: name: test_sext_inreg_s32_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: $vgpr0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = G_SEXT_INREG %0, 8
    $vgpr0 = COPY %1
...

---
name: test_sext_inreg_s32_16
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s32_16
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX8-LABEL: name: test_sext_inreg_s32_16
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX6-LABEL: name: test_sext_inreg_s32_16
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: $vgpr0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = G_SEXT_INREG %0, 8
    $vgpr0 = COPY %1
...

---
name: test_sext_inreg_s32_31
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s32_31
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX8-LABEL: name: test_sext_inreg_s32_31
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: $vgpr0 = COPY [[ASHR]](s32)
    ; GFX6-LABEL: name: test_sext_inreg_s32_31
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: $vgpr0 = COPY [[ASHR]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s32) = G_SEXT_INREG %0, 31
    $vgpr0 = COPY %1
...

---
name: test_sext_inreg_s64_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_1
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_1
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_1
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 1
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_2
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_2
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 62
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_2
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 62
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_2
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 62
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 2
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_16
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_16
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_16
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_16
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_31
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_31
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 33
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_31
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 33
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_31
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 33
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 31
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_32
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 32
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_32
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 32
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_32
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 32
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 32
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_33
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_33
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_33
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_33
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 33
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s64_63
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_s64_63
    ; GFX9: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX8-LABEL: name: test_sext_inreg_s64_63
    ; GFX8: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    ; GFX6-LABEL: name: test_sext_inreg_s64_63
    ; GFX6: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[COPY]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[ASHR]](s64)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s64) = G_SEXT_INREG %0, 63
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_s16_1
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s16_1
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; GFX9: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX9: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX9: S_ENDPGM 0, implicit [[ASHR]](s16)
    ; GFX8-LABEL: name: test_sext_inreg_s16_1
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; GFX8: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX8: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX8: S_ENDPGM 0, implicit [[ASHR]](s16)
    ; GFX6-LABEL: name: test_sext_inreg_s16_1
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR]](s32)
    ; GFX6: S_ENDPGM 0, implicit [[TRUNC]](s16)
    %0:_(s32) = COPY $vgpr0
    %1:_(s16) = G_TRUNC %0
    %2:_(s16) = G_SEXT_INREG %1, 1
    S_ENDPGM 0, implicit %2

...

---
name: test_sext_inreg_s16_15
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_s16_15
    ; GFX9: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; GFX9: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 1
    ; GFX9: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX9: S_ENDPGM 0, implicit [[ASHR]](s16)
    ; GFX8-LABEL: name: test_sext_inreg_s16_15
    ; GFX8: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; GFX8: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 1
    ; GFX8: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX8: S_ENDPGM 0, implicit [[ASHR]](s16)
    ; GFX6-LABEL: name: test_sext_inreg_s16_15
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 17
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR]](s32)
    ; GFX6: S_ENDPGM 0, implicit [[TRUNC]](s16)
    %0:_(s32) = COPY $vgpr0
    %1:_(s16) = G_TRUNC %0
    %2:_(s16) = G_SEXT_INREG %1, 15
    S_ENDPGM 0, implicit %2

...

---
name: test_sext_inreg_s96_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2

    ; GFX9-LABEL: name: test_sext_inreg_s96_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s96) = COPY $vgpr0_vgpr1_vgpr2
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s96)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ASHR]](s64)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UV]](s32), [[UV1]](s32)
    ; GFX9: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[ASHR1]](s32), [[ASHR1]](s32)
    ; GFX9: [[MV2:%[0-9]+]]:_(s192) = G_MERGE_VALUES [[MV]](s64), [[MV1]](s64), [[MV1]](s64)
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s96) = G_TRUNC [[MV2]](s192)
    ; GFX9: $vgpr0_vgpr1_vgpr2 = COPY [[TRUNC1]](s96)
    ; GFX8-LABEL: name: test_sext_inreg_s96_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s96) = COPY $vgpr0_vgpr1_vgpr2
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s96)
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ASHR]](s64)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C1]](s32)
    ; GFX8: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UV]](s32), [[UV1]](s32)
    ; GFX8: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[ASHR1]](s32), [[ASHR1]](s32)
    ; GFX8: [[MV2:%[0-9]+]]:_(s192) = G_MERGE_VALUES [[MV]](s64), [[MV1]](s64), [[MV1]](s64)
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s96) = G_TRUNC [[MV2]](s192)
    ; GFX8: $vgpr0_vgpr1_vgpr2 = COPY [[TRUNC1]](s96)
    ; GFX6-LABEL: name: test_sext_inreg_s96_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s96) = COPY $vgpr0_vgpr1_vgpr2
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s96)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ASHR]](s64)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C1]](s32)
    ; GFX6: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UV]](s32), [[UV1]](s32)
    ; GFX6: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[ASHR1]](s32), [[ASHR1]](s32)
    ; GFX6: [[MV2:%[0-9]+]]:_(s192) = G_MERGE_VALUES [[MV]](s64), [[MV1]](s64), [[MV1]](s64)
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s96) = G_TRUNC [[MV2]](s192)
    ; GFX6: $vgpr0_vgpr1_vgpr2 = COPY [[TRUNC1]](s96)
    %0:_(s96) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(s96) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1_vgpr2 = COPY %1
...

---
name: test_sext_inreg_s128_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3

    ; GFX9-LABEL: name: test_sext_inreg_s128_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s128)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    ; GFX8-LABEL: name: test_sext_inreg_s128_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s128)
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX8: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    ; GFX6-LABEL: name: test_sext_inreg_s128_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s128)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX6: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    %0:_(s128) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(s128) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_sext_inreg_s160_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4

    ; GFX9-LABEL: name: test_sext_inreg_s160_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s160) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s160)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ASHR]](s64)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UV]](s32), [[UV1]](s32)
    ; GFX9: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[ASHR1]](s32), [[ASHR1]](s32)
    ; GFX9: [[MV2:%[0-9]+]]:_(s320) = G_MERGE_VALUES [[MV]](s64), [[MV1]](s64), [[MV1]](s64), [[MV1]](s64), [[MV1]](s64)
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s160) = G_TRUNC [[MV2]](s320)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY [[TRUNC1]](s160)
    ; GFX8-LABEL: name: test_sext_inreg_s160_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s160) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s160)
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ASHR]](s64)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C1]](s32)
    ; GFX8: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UV]](s32), [[UV1]](s32)
    ; GFX8: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[ASHR1]](s32), [[ASHR1]](s32)
    ; GFX8: [[MV2:%[0-9]+]]:_(s320) = G_MERGE_VALUES [[MV]](s64), [[MV1]](s64), [[MV1]](s64), [[MV1]](s64), [[MV1]](s64)
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s160) = G_TRUNC [[MV2]](s320)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY [[TRUNC1]](s160)
    ; GFX6-LABEL: name: test_sext_inreg_s160_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s160) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s160)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ASHR]](s64)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C1]](s32)
    ; GFX6: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UV]](s32), [[UV1]](s32)
    ; GFX6: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[ASHR1]](s32), [[ASHR1]](s32)
    ; GFX6: [[MV2:%[0-9]+]]:_(s320) = G_MERGE_VALUES [[MV]](s64), [[MV1]](s64), [[MV1]](s64), [[MV1]](s64), [[MV1]](s64)
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s160) = G_TRUNC [[MV2]](s320)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY [[TRUNC1]](s160)
    %0:_(s160) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4
    %1:_(s160) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4 = COPY %1
...

---
name: test_sext_inreg_256_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7

    ; GFX9-LABEL: name: test_sext_inreg_256_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s256)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s256) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[MV]](s256)
    ; GFX8-LABEL: name: test_sext_inreg_256_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s256)
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX8: [[MV:%[0-9]+]]:_(s256) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[MV]](s256)
    ; GFX6-LABEL: name: test_sext_inreg_256_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s256)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX6: [[MV:%[0-9]+]]:_(s256) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[MV]](s256)
    %0:_(s256) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(s256) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %1
...

---
name: test_sext_inreg_512_8
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15

    ; GFX9-LABEL: name: test_sext_inreg_512_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s512)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s512) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[MV]](s512)
    ; GFX8-LABEL: name: test_sext_inreg_512_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s512)
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX8: [[MV:%[0-9]+]]:_(s512) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[MV]](s512)
    ; GFX6-LABEL: name: test_sext_inreg_512_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s512)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX6: [[MV:%[0-9]+]]:_(s512) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY [[MV]](s512)
    %0:_(s512) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15
    %1:_(s512) = G_SEXT_INREG %0, 8
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15 = COPY %1
...

---
name: test_sext_inreg_1024_8
body: |
  bb.0:
    liveins:  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31

    ; GFX9-LABEL: name: test_sext_inreg_1024_8
    ; GFX9: [[COPY:%[0-9]+]]:_(s1024) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s1024)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s1024) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY [[MV]](s1024)
    ; GFX8-LABEL: name: test_sext_inreg_1024_8
    ; GFX8: [[COPY:%[0-9]+]]:_(s1024) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s1024)
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX8: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX8: [[MV:%[0-9]+]]:_(s1024) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY [[MV]](s1024)
    ; GFX6-LABEL: name: test_sext_inreg_1024_8
    ; GFX6: [[COPY:%[0-9]+]]:_(s1024) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s64) = G_TRUNC [[COPY]](s1024)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 56
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[TRUNC]], [[C]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SHL]], [[COPY1]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[ASHR]], [[C1]](s32)
    ; GFX6: [[MV:%[0-9]+]]:_(s1024) = G_MERGE_VALUES [[ASHR]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64), [[ASHR1]](s64)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY [[MV]](s1024)
    %0:_(s1024) = COPY  $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31
    %1:_(s1024) = G_SEXT_INREG %0, 8
     $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8_vgpr9_vgpr10_vgpr11_vgpr12_vgpr13_vgpr14_vgpr15_vgpr16_vgpr17_vgpr18_vgpr19_vgpr20_vgpr21_vgpr22_vgpr23_vgpr24_vgpr25_vgpr26_vgpr27_vgpr28_vgpr29_vgpr30_vgpr31 = COPY %1
...

---
name: test_sext_inreg_v2s32_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_v2s32_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<2 x s32>) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<2 x s32>)
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; GFX8-LABEL: name: test_sext_inreg_v2s32_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<2 x s32>) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<2 x s32>)
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32)
    ; GFX8: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; GFX6-LABEL: name: test_sext_inreg_v2s32_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<2 x s32>) = COPY $vgpr0_vgpr1
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<2 x s32>)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32)
    ; GFX6: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    %0:_(<2 x s32>) = COPY $vgpr0_vgpr1
    %1:_(<2 x s32>) = G_SEXT_INREG %0, 1
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_v2s16_1
body: |
  bb.0:
    liveins: $vgpr0

    ; GFX9-LABEL: name: test_sext_inreg_v2s16_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $vgpr0
    ; GFX9: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[SHL:%[0-9]+]]:_(<2 x s16>) = G_SHL [[COPY]], [[BUILD_VECTOR]](<2 x s16>)
    ; GFX9: [[ASHR:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[SHL]], [[BUILD_VECTOR]](<2 x s16>)
    ; GFX9: $vgpr0 = COPY [[ASHR]](<2 x s16>)
    ; GFX8-LABEL: name: test_sext_inreg_v2s16_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $vgpr0
    ; GFX8: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX8: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[COPY]](<2 x s16>)
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX8: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C1]](s32)
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR]](s32)
    ; GFX8: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC1]], [[C]](s16)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s16) = G_ASHR [[SHL1]], [[C]](s16)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR]](s16), [[ASHR1]](s16)
    ; GFX8: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    ; GFX6-LABEL: name: test_sext_inreg_v2s16_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $vgpr0
    ; GFX6: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[COPY]](<2 x s16>)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX6: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 15
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY2:%[0-9]+]]:_(s32) = COPY [[BITCAST]](s32)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY2]], [[COPY1]](s32)
    ; GFX6: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LSHR]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY3]], [[C1]](s32)
    ; GFX6: [[COPY4:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY5:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; GFX6: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[COPY5]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[ASHR]], [[COPY4]](s32)
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR1]](s32)
    ; GFX6: [[COPY6:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY7:%[0-9]+]]:_(s32) = COPY [[SHL1]](s32)
    ; GFX6: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[COPY7]], [[C]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL3]], [[C]](s32)
    ; GFX6: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[ASHR2]], [[COPY6]](s32)
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR3]](s32)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; GFX6: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    %0:_(<2 x s16>) = COPY $vgpr0
    %1:_(<2 x s16>) = G_SEXT_INREG %0, 1
    $vgpr0 = COPY %1
...

---
name: test_sext_inreg_v3s16_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_v3s16_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<4 x s16>) = COPY $vgpr0_vgpr1
    ; GFX9: [[EXTRACT:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[COPY]](<4 x s16>), 0
    ; GFX9: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX9: [[DEF:%[0-9]+]]:_(s16) = G_IMPLICIT_DEF
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[DEF]](s16)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX9: [[EXTRACT1:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[CONCAT_VECTORS]](<4 x s16>), 0
    ; GFX9: [[DEF1:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF1]], [[EXTRACT]](<3 x s16>), 0
    ; GFX9: [[EXTRACT2:%[0-9]+]]:_(<2 x s16>) = G_EXTRACT [[INSERT]](<4 x s16>), 0
    ; GFX9: [[DEF2:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT1:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF2]], [[EXTRACT]](<3 x s16>), 0
    ; GFX9: [[EXTRACT3:%[0-9]+]]:_(s16) = G_EXTRACT [[INSERT1]](<4 x s16>), 32
    ; GFX9: [[DEF3:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT2:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF3]], [[EXTRACT1]](<3 x s16>), 0
    ; GFX9: [[EXTRACT4:%[0-9]+]]:_(<2 x s16>) = G_EXTRACT [[INSERT2]](<4 x s16>), 0
    ; GFX9: [[COPY1:%[0-9]+]]:_(s16) = COPY [[C]](s16)
    ; GFX9: [[SHL:%[0-9]+]]:_(<2 x s16>) = G_SHL [[EXTRACT2]], [[EXTRACT4]](<2 x s16>)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[EXTRACT3]], [[COPY1]](s16)
    ; GFX9: [[DEF4:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[EXTRACT5:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[DEF4]](<4 x s16>), 0
    ; GFX9: [[DEF5:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT3:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF5]], [[EXTRACT5]](<3 x s16>), 0
    ; GFX9: [[INSERT4:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[INSERT3]], [[SHL]](<2 x s16>), 0
    ; GFX9: [[EXTRACT6:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[INSERT4]](<4 x s16>), 0
    ; GFX9: [[DEF6:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT5:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF6]], [[EXTRACT6]](<3 x s16>), 0
    ; GFX9: [[INSERT6:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[INSERT5]], [[SHL1]](s16), 32
    ; GFX9: [[EXTRACT7:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[INSERT6]](<4 x s16>), 0
    ; GFX9: [[DEF7:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT7:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF7]], [[EXTRACT7]](<3 x s16>), 0
    ; GFX9: [[EXTRACT8:%[0-9]+]]:_(<2 x s16>) = G_EXTRACT [[INSERT7]](<4 x s16>), 0
    ; GFX9: [[DEF8:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT8:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF8]], [[EXTRACT7]](<3 x s16>), 0
    ; GFX9: [[EXTRACT9:%[0-9]+]]:_(s16) = G_EXTRACT [[INSERT8]](<4 x s16>), 32
    ; GFX9: [[DEF9:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT9:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF9]], [[EXTRACT1]](<3 x s16>), 0
    ; GFX9: [[EXTRACT10:%[0-9]+]]:_(<2 x s16>) = G_EXTRACT [[INSERT9]](<4 x s16>), 0
    ; GFX9: [[COPY2:%[0-9]+]]:_(s16) = COPY [[C]](s16)
    ; GFX9: [[ASHR:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[EXTRACT8]], [[EXTRACT10]](<2 x s16>)
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s16) = G_ASHR [[EXTRACT9]], [[COPY2]](s16)
    ; GFX9: [[DEF10:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[EXTRACT11:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[DEF10]](<4 x s16>), 0
    ; GFX9: [[DEF11:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT10:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF11]], [[EXTRACT11]](<3 x s16>), 0
    ; GFX9: [[INSERT11:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[INSERT10]], [[ASHR]](<2 x s16>), 0
    ; GFX9: [[EXTRACT12:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[INSERT11]](<4 x s16>), 0
    ; GFX9: [[DEF12:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT12:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF12]], [[EXTRACT12]](<3 x s16>), 0
    ; GFX9: [[INSERT13:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[INSERT12]], [[ASHR1]](s16), 32
    ; GFX9: [[EXTRACT13:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[INSERT13]](<4 x s16>), 0
    ; GFX9: [[INSERT14:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[COPY]], [[EXTRACT13]](<3 x s16>), 0
    ; GFX9: $vgpr0_vgpr1 = COPY [[INSERT14]](<4 x s16>)
    ; GFX8-LABEL: name: test_sext_inreg_v3s16_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<4 x s16>) = COPY $vgpr0_vgpr1
    ; GFX8: [[EXTRACT:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[COPY]](<4 x s16>), 0
    ; GFX8: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX8: [[DEF:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX8: [[INSERT:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF]], [[EXTRACT]](<3 x s16>), 0
    ; GFX8: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[INSERT]](<4 x s16>)
    ; GFX8: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[UV]](<2 x s16>)
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX8: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C1]](s32)
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR]](s32)
    ; GFX8: [[BITCAST1:%[0-9]+]]:_(s32) = G_BITCAST [[UV1]](<2 x s16>)
    ; GFX8: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST1]](s32)
    ; GFX8: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST1]], [[C1]](s32)
    ; GFX8: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC1]], [[C]](s16)
    ; GFX8: [[SHL2:%[0-9]+]]:_(s16) = G_SHL [[TRUNC2]], [[C]](s16)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s16) = G_ASHR [[SHL1]], [[C]](s16)
    ; GFX8: [[ASHR2:%[0-9]+]]:_(s16) = G_ASHR [[SHL2]], [[C]](s16)
    ; GFX8: [[DEF1:%[0-9]+]]:_(s16) = G_IMPLICIT_DEF
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR]](s16), [[ASHR1]](s16)
    ; GFX8: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR2]](s16), [[DEF1]](s16)
    ; GFX8: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX8: [[EXTRACT1:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[CONCAT_VECTORS]](<4 x s16>), 0
    ; GFX8: [[INSERT1:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[COPY]], [[EXTRACT1]](<3 x s16>), 0
    ; GFX8: $vgpr0_vgpr1 = COPY [[INSERT1]](<4 x s16>)
    ; GFX6-LABEL: name: test_sext_inreg_v3s16_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<4 x s16>) = COPY $vgpr0_vgpr1
    ; GFX6: [[EXTRACT:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[COPY]](<4 x s16>), 0
    ; GFX6: [[DEF:%[0-9]+]]:_(<4 x s16>) = G_IMPLICIT_DEF
    ; GFX6: [[INSERT:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[DEF]], [[EXTRACT]](<3 x s16>), 0
    ; GFX6: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[INSERT]](<4 x s16>)
    ; GFX6: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[UV]](<2 x s16>)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX6: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C]](s32)
    ; GFX6: [[BITCAST1:%[0-9]+]]:_(s32) = G_BITCAST [[UV1]](<2 x s16>)
    ; GFX6: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST1]], [[C]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 15
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY2:%[0-9]+]]:_(s32) = COPY [[BITCAST]](s32)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY2]], [[COPY1]](s32)
    ; GFX6: [[COPY3:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LSHR]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY4]], [[COPY3]](s32)
    ; GFX6: [[COPY5:%[0-9]+]]:_(s32) = COPY [[BITCAST1]](s32)
    ; GFX6: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[COPY5]], [[C1]](s32)
    ; GFX6: [[COPY6:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY7:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; GFX6: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[COPY7]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL3]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[ASHR]], [[COPY6]](s32)
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR1]](s32)
    ; GFX6: [[COPY8:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY9:%[0-9]+]]:_(s32) = COPY [[SHL1]](s32)
    ; GFX6: [[SHL4:%[0-9]+]]:_(s32) = G_SHL [[COPY9]], [[C]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL4]], [[C]](s32)
    ; GFX6: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[ASHR2]], [[COPY8]](s32)
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR3]](s32)
    ; GFX6: [[COPY10:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY11:%[0-9]+]]:_(s32) = COPY [[SHL2]](s32)
    ; GFX6: [[SHL5:%[0-9]+]]:_(s32) = G_SHL [[COPY11]], [[C]](s32)
    ; GFX6: [[ASHR4:%[0-9]+]]:_(s32) = G_ASHR [[SHL5]], [[C]](s32)
    ; GFX6: [[ASHR5:%[0-9]+]]:_(s32) = G_ASHR [[ASHR4]], [[COPY10]](s32)
    ; GFX6: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR5]](s32)
    ; GFX6: [[DEF1:%[0-9]+]]:_(s16) = G_IMPLICIT_DEF
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; GFX6: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[DEF1]](s16)
    ; GFX6: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX6: [[EXTRACT1:%[0-9]+]]:_(<3 x s16>) = G_EXTRACT [[CONCAT_VECTORS]](<4 x s16>), 0
    ; GFX6: [[INSERT1:%[0-9]+]]:_(<4 x s16>) = G_INSERT [[COPY]], [[EXTRACT1]](<3 x s16>), 0
    ; GFX6: $vgpr0_vgpr1 = COPY [[INSERT1]](<4 x s16>)
    %0:_(<4 x s16>) = COPY $vgpr0_vgpr1
    %1:_(<3 x s16>) = G_EXTRACT %0, 0
    %2:_(<3 x s16>) = G_SEXT_INREG %1, 1
    %3:_(<4 x s16>) = G_INSERT %0, %2, 0
    $vgpr0_vgpr1 = COPY %3
...

---
name: test_sext_inreg_v3s32_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2

    ; GFX9-LABEL: name: test_sext_inreg_v3s32_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<3 x s32>) = COPY $vgpr0_vgpr1_vgpr2
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<3 x s32>)
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX9: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[UV2]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX9: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32), [[ASHR2]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    ; GFX8-LABEL: name: test_sext_inreg_v3s32_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<3 x s32>) = COPY $vgpr0_vgpr1_vgpr2
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<3 x s32>)
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX8: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[UV2]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX8: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32), [[ASHR2]](s32)
    ; GFX8: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    ; GFX6-LABEL: name: test_sext_inreg_v3s32_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<3 x s32>) = COPY $vgpr0_vgpr1_vgpr2
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<3 x s32>)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX6: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[UV2]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32), [[ASHR2]](s32)
    ; GFX6: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    %0:_(<3 x s32>) = COPY $vgpr0_vgpr1_vgpr2
    %1:_(<3 x s32>) = G_SEXT_INREG %0, 1
    $vgpr0_vgpr1_vgpr2 = COPY %1
...

---
name: test_sext_inreg_v4s32_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3

    ; GFX9-LABEL: name: test_sext_inreg_v4s32_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<4 x s32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX9: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<4 x s32>)
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX9: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[UV2]], [[C]](s32)
    ; GFX9: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[UV3]], [[C]](s32)
    ; GFX9: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX9: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX9: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[SHL3]], [[C]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32), [[ASHR2]](s32), [[ASHR3]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<4 x s32>)
    ; GFX8-LABEL: name: test_sext_inreg_v4s32_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<4 x s32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GFX8: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX8: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<4 x s32>)
    ; GFX8: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX8: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[UV2]], [[C]](s32)
    ; GFX8: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[UV3]], [[C]](s32)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX8: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX8: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[SHL3]], [[C]](s32)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32), [[ASHR2]](s32), [[ASHR3]](s32)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<4 x s32>)
    ; GFX6-LABEL: name: test_sext_inreg_v4s32_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<4 x s32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; GFX6: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<4 x s32>)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV]], [[C]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C]](s32)
    ; GFX6: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[UV2]], [[C]](s32)
    ; GFX6: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[UV3]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[SHL1]], [[C]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL2]], [[C]](s32)
    ; GFX6: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[SHL3]], [[C]](s32)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s32>) = G_BUILD_VECTOR [[ASHR]](s32), [[ASHR1]](s32), [[ASHR2]](s32), [[ASHR3]](s32)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<4 x s32>)
    %0:_(<4 x s32>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3
    %1:_(<4 x s32>) = G_SEXT_INREG %0, 1
    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_sext_inreg_v4s16_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1

    ; GFX9-LABEL: name: test_sext_inreg_v4s16_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<4 x s16>) = COPY $vgpr0_vgpr1
    ; GFX9: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX9: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[COPY]](<4 x s16>)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[SHL:%[0-9]+]]:_(<2 x s16>) = G_SHL [[UV]], [[BUILD_VECTOR]](<2 x s16>)
    ; GFX9: [[SHL1:%[0-9]+]]:_(<2 x s16>) = G_SHL [[UV1]], [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX9: [[BUILD_VECTOR2:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR3:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[ASHR:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[SHL]], [[BUILD_VECTOR2]](<2 x s16>)
    ; GFX9: [[ASHR1:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[SHL1]], [[BUILD_VECTOR3]](<2 x s16>)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[ASHR]](<2 x s16>), [[ASHR1]](<2 x s16>)
    ; GFX9: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; GFX8-LABEL: name: test_sext_inreg_v4s16_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<4 x s16>) = COPY $vgpr0_vgpr1
    ; GFX8: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX8: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[COPY]](<4 x s16>)
    ; GFX8: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[UV]](<2 x s16>)
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX8: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C1]](s32)
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR]](s32)
    ; GFX8: [[BITCAST1:%[0-9]+]]:_(s32) = G_BITCAST [[UV1]](<2 x s16>)
    ; GFX8: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST1]](s32)
    ; GFX8: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST1]], [[C1]](s32)
    ; GFX8: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR1]](s32)
    ; GFX8: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[C]](s16)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC1]], [[C]](s16)
    ; GFX8: [[SHL2:%[0-9]+]]:_(s16) = G_SHL [[TRUNC2]], [[C]](s16)
    ; GFX8: [[SHL3:%[0-9]+]]:_(s16) = G_SHL [[TRUNC3]], [[C]](s16)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s16) = G_ASHR [[SHL1]], [[C]](s16)
    ; GFX8: [[ASHR2:%[0-9]+]]:_(s16) = G_ASHR [[SHL2]], [[C]](s16)
    ; GFX8: [[ASHR3:%[0-9]+]]:_(s16) = G_ASHR [[SHL3]], [[C]](s16)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR]](s16), [[ASHR1]](s16)
    ; GFX8: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR2]](s16), [[ASHR3]](s16)
    ; GFX8: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX8: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; GFX6-LABEL: name: test_sext_inreg_v4s16_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<4 x s16>) = COPY $vgpr0_vgpr1
    ; GFX6: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[COPY]](<4 x s16>)
    ; GFX6: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[UV]](<2 x s16>)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX6: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C]](s32)
    ; GFX6: [[BITCAST1:%[0-9]+]]:_(s32) = G_BITCAST [[UV1]](<2 x s16>)
    ; GFX6: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST1]], [[C]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 15
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY2:%[0-9]+]]:_(s32) = COPY [[BITCAST]](s32)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY2]], [[COPY1]](s32)
    ; GFX6: [[COPY3:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LSHR]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY4]], [[COPY3]](s32)
    ; GFX6: [[COPY5:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY6:%[0-9]+]]:_(s32) = COPY [[BITCAST1]](s32)
    ; GFX6: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[COPY6]], [[COPY5]](s32)
    ; GFX6: [[COPY7:%[0-9]+]]:_(s32) = COPY [[LSHR1]](s32)
    ; GFX6: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[COPY7]], [[C1]](s32)
    ; GFX6: [[COPY8:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY9:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; GFX6: [[SHL4:%[0-9]+]]:_(s32) = G_SHL [[COPY9]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL4]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[ASHR]], [[COPY8]](s32)
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR1]](s32)
    ; GFX6: [[COPY10:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY11:%[0-9]+]]:_(s32) = COPY [[SHL1]](s32)
    ; GFX6: [[SHL5:%[0-9]+]]:_(s32) = G_SHL [[COPY11]], [[C]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL5]], [[C]](s32)
    ; GFX6: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[ASHR2]], [[COPY10]](s32)
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR3]](s32)
    ; GFX6: [[COPY12:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY13:%[0-9]+]]:_(s32) = COPY [[SHL2]](s32)
    ; GFX6: [[SHL6:%[0-9]+]]:_(s32) = G_SHL [[COPY13]], [[C]](s32)
    ; GFX6: [[ASHR4:%[0-9]+]]:_(s32) = G_ASHR [[SHL6]], [[C]](s32)
    ; GFX6: [[ASHR5:%[0-9]+]]:_(s32) = G_ASHR [[ASHR4]], [[COPY12]](s32)
    ; GFX6: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR5]](s32)
    ; GFX6: [[COPY14:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY15:%[0-9]+]]:_(s32) = COPY [[SHL3]](s32)
    ; GFX6: [[SHL7:%[0-9]+]]:_(s32) = G_SHL [[COPY15]], [[C]](s32)
    ; GFX6: [[ASHR6:%[0-9]+]]:_(s32) = G_ASHR [[SHL7]], [[C]](s32)
    ; GFX6: [[ASHR7:%[0-9]+]]:_(s32) = G_ASHR [[ASHR6]], [[COPY14]](s32)
    ; GFX6: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR7]](s32)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; GFX6: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC3]](s16)
    ; GFX6: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX6: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    %0:_(<4 x s16>) = COPY $vgpr0_vgpr1
    %1:_(<4 x s16>) = G_SEXT_INREG %0, 1
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_sext_inreg_v6s16_1
body: |
  bb.0:

    ; GFX9-LABEL: name: test_sext_inreg_v6s16_1
    ; GFX9: [[DEF:%[0-9]+]]:_(<6 x s32>) = G_IMPLICIT_DEF
    ; GFX9: [[TRUNC:%[0-9]+]]:_(<6 x s16>) = G_TRUNC [[DEF]](<6 x s32>)
    ; GFX9: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX9: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>), [[UV2:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[TRUNC]](<6 x s16>)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR2:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[SHL:%[0-9]+]]:_(<2 x s16>) = G_SHL [[UV]], [[BUILD_VECTOR]](<2 x s16>)
    ; GFX9: [[SHL1:%[0-9]+]]:_(<2 x s16>) = G_SHL [[UV1]], [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX9: [[SHL2:%[0-9]+]]:_(<2 x s16>) = G_SHL [[UV2]], [[BUILD_VECTOR2]](<2 x s16>)
    ; GFX9: [[BUILD_VECTOR3:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR4:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[BUILD_VECTOR5:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[C]](s16), [[C]](s16)
    ; GFX9: [[ASHR:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[SHL]], [[BUILD_VECTOR3]](<2 x s16>)
    ; GFX9: [[ASHR1:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[SHL1]], [[BUILD_VECTOR4]](<2 x s16>)
    ; GFX9: [[ASHR2:%[0-9]+]]:_(<2 x s16>) = G_ASHR [[SHL2]], [[BUILD_VECTOR5]](<2 x s16>)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<6 x s16>) = G_CONCAT_VECTORS [[ASHR]](<2 x s16>), [[ASHR1]](<2 x s16>), [[ASHR2]](<2 x s16>)
    ; GFX9: S_ENDPGM 0, implicit [[CONCAT_VECTORS]](<6 x s16>)
    ; GFX8-LABEL: name: test_sext_inreg_v6s16_1
    ; GFX8: [[DEF:%[0-9]+]]:_(<6 x s32>) = G_IMPLICIT_DEF
    ; GFX8: [[TRUNC:%[0-9]+]]:_(<6 x s16>) = G_TRUNC [[DEF]](<6 x s32>)
    ; GFX8: [[C:%[0-9]+]]:_(s16) = G_CONSTANT i16 15
    ; GFX8: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>), [[UV2:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[TRUNC]](<6 x s16>)
    ; GFX8: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[UV]](<2 x s16>)
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST]](s32)
    ; GFX8: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX8: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C1]](s32)
    ; GFX8: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR]](s32)
    ; GFX8: [[BITCAST1:%[0-9]+]]:_(s32) = G_BITCAST [[UV1]](<2 x s16>)
    ; GFX8: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST1]](s32)
    ; GFX8: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST1]], [[C1]](s32)
    ; GFX8: [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR1]](s32)
    ; GFX8: [[BITCAST2:%[0-9]+]]:_(s32) = G_BITCAST [[UV2]](<2 x s16>)
    ; GFX8: [[TRUNC5:%[0-9]+]]:_(s16) = G_TRUNC [[BITCAST2]](s32)
    ; GFX8: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST2]], [[C1]](s32)
    ; GFX8: [[TRUNC6:%[0-9]+]]:_(s16) = G_TRUNC [[LSHR2]](s32)
    ; GFX8: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC1]], [[C]](s16)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC2]], [[C]](s16)
    ; GFX8: [[SHL2:%[0-9]+]]:_(s16) = G_SHL [[TRUNC3]], [[C]](s16)
    ; GFX8: [[SHL3:%[0-9]+]]:_(s16) = G_SHL [[TRUNC4]], [[C]](s16)
    ; GFX8: [[SHL4:%[0-9]+]]:_(s16) = G_SHL [[TRUNC5]], [[C]](s16)
    ; GFX8: [[SHL5:%[0-9]+]]:_(s16) = G_SHL [[TRUNC6]], [[C]](s16)
    ; GFX8: [[ASHR:%[0-9]+]]:_(s16) = G_ASHR [[SHL]], [[C]](s16)
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s16) = G_ASHR [[SHL1]], [[C]](s16)
    ; GFX8: [[ASHR2:%[0-9]+]]:_(s16) = G_ASHR [[SHL2]], [[C]](s16)
    ; GFX8: [[ASHR3:%[0-9]+]]:_(s16) = G_ASHR [[SHL3]], [[C]](s16)
    ; GFX8: [[ASHR4:%[0-9]+]]:_(s16) = G_ASHR [[SHL4]], [[C]](s16)
    ; GFX8: [[ASHR5:%[0-9]+]]:_(s16) = G_ASHR [[SHL5]], [[C]](s16)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR]](s16), [[ASHR1]](s16)
    ; GFX8: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR2]](s16), [[ASHR3]](s16)
    ; GFX8: [[BUILD_VECTOR2:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[ASHR4]](s16), [[ASHR5]](s16)
    ; GFX8: [[CONCAT_VECTORS:%[0-9]+]]:_(<6 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>), [[BUILD_VECTOR2]](<2 x s16>)
    ; GFX8: S_ENDPGM 0, implicit [[CONCAT_VECTORS]](<6 x s16>)
    ; GFX6-LABEL: name: test_sext_inreg_v6s16_1
    ; GFX6: [[DEF:%[0-9]+]]:_(<6 x s32>) = G_IMPLICIT_DEF
    ; GFX6: [[TRUNC:%[0-9]+]]:_(<6 x s16>) = G_TRUNC [[DEF]](<6 x s32>)
    ; GFX6: [[UV:%[0-9]+]]:_(<2 x s16>), [[UV1:%[0-9]+]]:_(<2 x s16>), [[UV2:%[0-9]+]]:_(<2 x s16>) = G_UNMERGE_VALUES [[TRUNC]](<6 x s16>)
    ; GFX6: [[BITCAST:%[0-9]+]]:_(s32) = G_BITCAST [[UV]](<2 x s16>)
    ; GFX6: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX6: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST]], [[C]](s32)
    ; GFX6: [[BITCAST1:%[0-9]+]]:_(s32) = G_BITCAST [[UV1]](<2 x s16>)
    ; GFX6: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST1]], [[C]](s32)
    ; GFX6: [[BITCAST2:%[0-9]+]]:_(s32) = G_BITCAST [[UV2]](<2 x s16>)
    ; GFX6: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[BITCAST2]], [[C]](s32)
    ; GFX6: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 15
    ; GFX6: [[COPY:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY1:%[0-9]+]]:_(s32) = COPY [[BITCAST]](s32)
    ; GFX6: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY1]], [[COPY]](s32)
    ; GFX6: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LSHR]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[COPY3]], [[COPY2]](s32)
    ; GFX6: [[COPY4:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY5:%[0-9]+]]:_(s32) = COPY [[BITCAST1]](s32)
    ; GFX6: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[COPY5]], [[COPY4]](s32)
    ; GFX6: [[COPY6:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY7:%[0-9]+]]:_(s32) = COPY [[LSHR1]](s32)
    ; GFX6: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[COPY7]], [[COPY6]](s32)
    ; GFX6: [[COPY8:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY9:%[0-9]+]]:_(s32) = COPY [[BITCAST2]](s32)
    ; GFX6: [[SHL4:%[0-9]+]]:_(s32) = G_SHL [[COPY9]], [[COPY8]](s32)
    ; GFX6: [[COPY10:%[0-9]+]]:_(s32) = COPY [[LSHR2]](s32)
    ; GFX6: [[SHL5:%[0-9]+]]:_(s32) = G_SHL [[COPY10]], [[C1]](s32)
    ; GFX6: [[COPY11:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY12:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; GFX6: [[SHL6:%[0-9]+]]:_(s32) = G_SHL [[COPY12]], [[C]](s32)
    ; GFX6: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SHL6]], [[C]](s32)
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s32) = G_ASHR [[ASHR]], [[COPY11]](s32)
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR1]](s32)
    ; GFX6: [[COPY13:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY14:%[0-9]+]]:_(s32) = COPY [[SHL1]](s32)
    ; GFX6: [[SHL7:%[0-9]+]]:_(s32) = G_SHL [[COPY14]], [[C]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s32) = G_ASHR [[SHL7]], [[C]](s32)
    ; GFX6: [[ASHR3:%[0-9]+]]:_(s32) = G_ASHR [[ASHR2]], [[COPY13]](s32)
    ; GFX6: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR3]](s32)
    ; GFX6: [[COPY15:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY16:%[0-9]+]]:_(s32) = COPY [[SHL2]](s32)
    ; GFX6: [[SHL8:%[0-9]+]]:_(s32) = G_SHL [[COPY16]], [[C]](s32)
    ; GFX6: [[ASHR4:%[0-9]+]]:_(s32) = G_ASHR [[SHL8]], [[C]](s32)
    ; GFX6: [[ASHR5:%[0-9]+]]:_(s32) = G_ASHR [[ASHR4]], [[COPY15]](s32)
    ; GFX6: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR5]](s32)
    ; GFX6: [[COPY17:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY18:%[0-9]+]]:_(s32) = COPY [[SHL3]](s32)
    ; GFX6: [[SHL9:%[0-9]+]]:_(s32) = G_SHL [[COPY18]], [[C]](s32)
    ; GFX6: [[ASHR6:%[0-9]+]]:_(s32) = G_ASHR [[SHL9]], [[C]](s32)
    ; GFX6: [[ASHR7:%[0-9]+]]:_(s32) = G_ASHR [[ASHR6]], [[COPY17]](s32)
    ; GFX6: [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR7]](s32)
    ; GFX6: [[COPY19:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY20:%[0-9]+]]:_(s32) = COPY [[SHL4]](s32)
    ; GFX6: [[SHL10:%[0-9]+]]:_(s32) = G_SHL [[COPY20]], [[C]](s32)
    ; GFX6: [[ASHR8:%[0-9]+]]:_(s32) = G_ASHR [[SHL10]], [[C]](s32)
    ; GFX6: [[ASHR9:%[0-9]+]]:_(s32) = G_ASHR [[ASHR8]], [[COPY19]](s32)
    ; GFX6: [[TRUNC5:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR9]](s32)
    ; GFX6: [[COPY21:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX6: [[COPY22:%[0-9]+]]:_(s32) = COPY [[SHL5]](s32)
    ; GFX6: [[SHL11:%[0-9]+]]:_(s32) = G_SHL [[COPY22]], [[C]](s32)
    ; GFX6: [[ASHR10:%[0-9]+]]:_(s32) = G_ASHR [[SHL11]], [[C]](s32)
    ; GFX6: [[ASHR11:%[0-9]+]]:_(s32) = G_ASHR [[ASHR10]], [[COPY21]](s32)
    ; GFX6: [[TRUNC6:%[0-9]+]]:_(s16) = G_TRUNC [[ASHR11]](s32)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC1]](s16), [[TRUNC2]](s16)
    ; GFX6: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC3]](s16), [[TRUNC4]](s16)
    ; GFX6: [[BUILD_VECTOR2:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC5]](s16), [[TRUNC6]](s16)
    ; GFX6: [[CONCAT_VECTORS:%[0-9]+]]:_(<6 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>), [[BUILD_VECTOR2]](<2 x s16>)
    ; GFX6: S_ENDPGM 0, implicit [[CONCAT_VECTORS]](<6 x s16>)
    %0:_(<6 x s16>) = G_IMPLICIT_DEF
    %1:_(<6 x s16>) = G_SEXT_INREG %0, 1
    S_ENDPGM 0, implicit %1

...

# FIXME: Should scalarize first
---
name: test_sext_inreg_v2s128_1
body: |
  bb.0:
    liveins: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7

    ; GFX9-LABEL: name: test_sext_inreg_v2s128_1
    ; GFX9: [[COPY:%[0-9]+]]:_(<2 x s128>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; GFX9: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 127
    ; GFX9: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; GFX9: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[C]](s64), [[C1]](s64)
    ; GFX9: [[UV:%[0-9]+]]:_(s128), [[UV1:%[0-9]+]]:_(s128) = G_UNMERGE_VALUES [[COPY]](<2 x s128>)
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 64
    ; GFX9: [[UV2:%[0-9]+]]:_(s64), [[UV3:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[UV]](s128)
    ; GFX9: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[TRUNC]], [[C2]]
    ; GFX9: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC]]
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; GFX9: [[ICMP:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC]](s32), [[C2]]
    ; GFX9: [[ICMP1:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC]](s32), [[C3]]
    ; GFX9: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[UV2]], [[TRUNC]](s32)
    ; GFX9: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[UV2]], [[SUB1]](s32)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s64) = G_SHL [[UV3]], [[TRUNC]](s32)
    ; GFX9: [[OR:%[0-9]+]]:_(s64) = G_OR [[LSHR]], [[SHL1]]
    ; GFX9: [[SHL2:%[0-9]+]]:_(s64) = G_SHL [[UV2]], [[SUB]](s32)
    ; GFX9: [[SELECT:%[0-9]+]]:_(s64) = G_SELECT [[ICMP]](s1), [[SHL]], [[C1]]
    ; GFX9: [[SELECT1:%[0-9]+]]:_(s64) = G_SELECT [[ICMP]](s1), [[OR]], [[SHL2]]
    ; GFX9: [[SELECT2:%[0-9]+]]:_(s64) = G_SELECT [[ICMP1]](s1), [[UV3]], [[SELECT1]]
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX9: [[UV4:%[0-9]+]]:_(s64), [[UV5:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[UV1]](s128)
    ; GFX9: [[SUB2:%[0-9]+]]:_(s32) = G_SUB [[TRUNC1]], [[C2]]
    ; GFX9: [[SUB3:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC1]]
    ; GFX9: [[ICMP2:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC1]](s32), [[C2]]
    ; GFX9: [[ICMP3:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC1]](s32), [[C3]]
    ; GFX9: [[SHL3:%[0-9]+]]:_(s64) = G_SHL [[UV4]], [[TRUNC1]](s32)
    ; GFX9: [[LSHR1:%[0-9]+]]:_(s64) = G_LSHR [[UV4]], [[SUB3]](s32)
    ; GFX9: [[SHL4:%[0-9]+]]:_(s64) = G_SHL [[UV5]], [[TRUNC1]](s32)
    ; GFX9: [[OR1:%[0-9]+]]:_(s64) = G_OR [[LSHR1]], [[SHL4]]
    ; GFX9: [[SHL5:%[0-9]+]]:_(s64) = G_SHL [[UV4]], [[SUB2]](s32)
    ; GFX9: [[SELECT3:%[0-9]+]]:_(s64) = G_SELECT [[ICMP2]](s1), [[SHL3]], [[C1]]
    ; GFX9: [[SELECT4:%[0-9]+]]:_(s64) = G_SELECT [[ICMP2]](s1), [[OR1]], [[SHL5]]
    ; GFX9: [[SELECT5:%[0-9]+]]:_(s64) = G_SELECT [[ICMP3]](s1), [[UV5]], [[SELECT4]]
    ; GFX9: [[TRUNC2:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX9: [[SUB4:%[0-9]+]]:_(s32) = G_SUB [[TRUNC2]], [[C2]]
    ; GFX9: [[SUB5:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC2]]
    ; GFX9: [[ICMP4:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC2]](s32), [[C2]]
    ; GFX9: [[ICMP5:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC2]](s32), [[C3]]
    ; GFX9: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[TRUNC2]](s32)
    ; GFX9: [[LSHR2:%[0-9]+]]:_(s64) = G_LSHR [[SELECT]], [[TRUNC2]](s32)
    ; GFX9: [[SHL6:%[0-9]+]]:_(s64) = G_SHL [[SELECT2]], [[SUB5]](s32)
    ; GFX9: [[OR2:%[0-9]+]]:_(s64) = G_OR [[LSHR2]], [[SHL6]]
    ; GFX9: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX9: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[C4]](s32)
    ; GFX9: [[ASHR2:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[SUB4]](s32)
    ; GFX9: [[SELECT6:%[0-9]+]]:_(s64) = G_SELECT [[ICMP4]](s1), [[OR2]], [[ASHR2]]
    ; GFX9: [[SELECT7:%[0-9]+]]:_(s64) = G_SELECT [[ICMP5]](s1), [[SELECT]], [[SELECT6]]
    ; GFX9: [[SELECT8:%[0-9]+]]:_(s64) = G_SELECT [[ICMP4]](s1), [[ASHR]], [[ASHR1]]
    ; GFX9: [[MV1:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[SELECT7]](s64), [[SELECT8]](s64)
    ; GFX9: [[TRUNC3:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX9: [[SUB6:%[0-9]+]]:_(s32) = G_SUB [[TRUNC3]], [[C2]]
    ; GFX9: [[SUB7:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC3]]
    ; GFX9: [[ICMP6:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC3]](s32), [[C2]]
    ; GFX9: [[ICMP7:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC3]](s32), [[C3]]
    ; GFX9: [[ASHR3:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[TRUNC3]](s32)
    ; GFX9: [[LSHR3:%[0-9]+]]:_(s64) = G_LSHR [[SELECT3]], [[TRUNC3]](s32)
    ; GFX9: [[SHL7:%[0-9]+]]:_(s64) = G_SHL [[SELECT5]], [[SUB7]](s32)
    ; GFX9: [[OR3:%[0-9]+]]:_(s64) = G_OR [[LSHR3]], [[SHL7]]
    ; GFX9: [[ASHR4:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[C4]](s32)
    ; GFX9: [[ASHR5:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[SUB6]](s32)
    ; GFX9: [[SELECT9:%[0-9]+]]:_(s64) = G_SELECT [[ICMP6]](s1), [[OR3]], [[ASHR5]]
    ; GFX9: [[SELECT10:%[0-9]+]]:_(s64) = G_SELECT [[ICMP7]](s1), [[SELECT3]], [[SELECT9]]
    ; GFX9: [[SELECT11:%[0-9]+]]:_(s64) = G_SELECT [[ICMP6]](s1), [[ASHR3]], [[ASHR4]]
    ; GFX9: [[MV2:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[SELECT10]](s64), [[SELECT11]](s64)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s128>) = G_BUILD_VECTOR [[MV1]](s128), [[MV2]](s128)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[BUILD_VECTOR]](<2 x s128>)
    ; GFX8-LABEL: name: test_sext_inreg_v2s128_1
    ; GFX8: [[COPY:%[0-9]+]]:_(<2 x s128>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; GFX8: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 127
    ; GFX8: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; GFX8: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[C]](s64), [[C1]](s64)
    ; GFX8: [[UV:%[0-9]+]]:_(s128), [[UV1:%[0-9]+]]:_(s128) = G_UNMERGE_VALUES [[COPY]](<2 x s128>)
    ; GFX8: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX8: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 64
    ; GFX8: [[UV2:%[0-9]+]]:_(s64), [[UV3:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[UV]](s128)
    ; GFX8: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[TRUNC]], [[C2]]
    ; GFX8: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC]]
    ; GFX8: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; GFX8: [[ICMP:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC]](s32), [[C2]]
    ; GFX8: [[ICMP1:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC]](s32), [[C3]]
    ; GFX8: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[UV2]], [[TRUNC]](s32)
    ; GFX8: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[UV2]], [[SUB1]](s32)
    ; GFX8: [[SHL1:%[0-9]+]]:_(s64) = G_SHL [[UV3]], [[TRUNC]](s32)
    ; GFX8: [[OR:%[0-9]+]]:_(s64) = G_OR [[LSHR]], [[SHL1]]
    ; GFX8: [[SHL2:%[0-9]+]]:_(s64) = G_SHL [[UV2]], [[SUB]](s32)
    ; GFX8: [[SELECT:%[0-9]+]]:_(s64) = G_SELECT [[ICMP]](s1), [[SHL]], [[C1]]
    ; GFX8: [[SELECT1:%[0-9]+]]:_(s64) = G_SELECT [[ICMP]](s1), [[OR]], [[SHL2]]
    ; GFX8: [[SELECT2:%[0-9]+]]:_(s64) = G_SELECT [[ICMP1]](s1), [[UV3]], [[SELECT1]]
    ; GFX8: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX8: [[UV4:%[0-9]+]]:_(s64), [[UV5:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[UV1]](s128)
    ; GFX8: [[SUB2:%[0-9]+]]:_(s32) = G_SUB [[TRUNC1]], [[C2]]
    ; GFX8: [[SUB3:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC1]]
    ; GFX8: [[ICMP2:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC1]](s32), [[C2]]
    ; GFX8: [[ICMP3:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC1]](s32), [[C3]]
    ; GFX8: [[SHL3:%[0-9]+]]:_(s64) = G_SHL [[UV4]], [[TRUNC1]](s32)
    ; GFX8: [[LSHR1:%[0-9]+]]:_(s64) = G_LSHR [[UV4]], [[SUB3]](s32)
    ; GFX8: [[SHL4:%[0-9]+]]:_(s64) = G_SHL [[UV5]], [[TRUNC1]](s32)
    ; GFX8: [[OR1:%[0-9]+]]:_(s64) = G_OR [[LSHR1]], [[SHL4]]
    ; GFX8: [[SHL5:%[0-9]+]]:_(s64) = G_SHL [[UV4]], [[SUB2]](s32)
    ; GFX8: [[SELECT3:%[0-9]+]]:_(s64) = G_SELECT [[ICMP2]](s1), [[SHL3]], [[C1]]
    ; GFX8: [[SELECT4:%[0-9]+]]:_(s64) = G_SELECT [[ICMP2]](s1), [[OR1]], [[SHL5]]
    ; GFX8: [[SELECT5:%[0-9]+]]:_(s64) = G_SELECT [[ICMP3]](s1), [[UV5]], [[SELECT4]]
    ; GFX8: [[TRUNC2:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX8: [[SUB4:%[0-9]+]]:_(s32) = G_SUB [[TRUNC2]], [[C2]]
    ; GFX8: [[SUB5:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC2]]
    ; GFX8: [[ICMP4:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC2]](s32), [[C2]]
    ; GFX8: [[ICMP5:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC2]](s32), [[C3]]
    ; GFX8: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[TRUNC2]](s32)
    ; GFX8: [[LSHR2:%[0-9]+]]:_(s64) = G_LSHR [[SELECT]], [[TRUNC2]](s32)
    ; GFX8: [[SHL6:%[0-9]+]]:_(s64) = G_SHL [[SELECT2]], [[SUB5]](s32)
    ; GFX8: [[OR2:%[0-9]+]]:_(s64) = G_OR [[LSHR2]], [[SHL6]]
    ; GFX8: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX8: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[C4]](s32)
    ; GFX8: [[ASHR2:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[SUB4]](s32)
    ; GFX8: [[SELECT6:%[0-9]+]]:_(s64) = G_SELECT [[ICMP4]](s1), [[OR2]], [[ASHR2]]
    ; GFX8: [[SELECT7:%[0-9]+]]:_(s64) = G_SELECT [[ICMP5]](s1), [[SELECT]], [[SELECT6]]
    ; GFX8: [[SELECT8:%[0-9]+]]:_(s64) = G_SELECT [[ICMP4]](s1), [[ASHR]], [[ASHR1]]
    ; GFX8: [[MV1:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[SELECT7]](s64), [[SELECT8]](s64)
    ; GFX8: [[TRUNC3:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX8: [[SUB6:%[0-9]+]]:_(s32) = G_SUB [[TRUNC3]], [[C2]]
    ; GFX8: [[SUB7:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC3]]
    ; GFX8: [[ICMP6:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC3]](s32), [[C2]]
    ; GFX8: [[ICMP7:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC3]](s32), [[C3]]
    ; GFX8: [[ASHR3:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[TRUNC3]](s32)
    ; GFX8: [[LSHR3:%[0-9]+]]:_(s64) = G_LSHR [[SELECT3]], [[TRUNC3]](s32)
    ; GFX8: [[SHL7:%[0-9]+]]:_(s64) = G_SHL [[SELECT5]], [[SUB7]](s32)
    ; GFX8: [[OR3:%[0-9]+]]:_(s64) = G_OR [[LSHR3]], [[SHL7]]
    ; GFX8: [[ASHR4:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[C4]](s32)
    ; GFX8: [[ASHR5:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[SUB6]](s32)
    ; GFX8: [[SELECT9:%[0-9]+]]:_(s64) = G_SELECT [[ICMP6]](s1), [[OR3]], [[ASHR5]]
    ; GFX8: [[SELECT10:%[0-9]+]]:_(s64) = G_SELECT [[ICMP7]](s1), [[SELECT3]], [[SELECT9]]
    ; GFX8: [[SELECT11:%[0-9]+]]:_(s64) = G_SELECT [[ICMP6]](s1), [[ASHR3]], [[ASHR4]]
    ; GFX8: [[MV2:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[SELECT10]](s64), [[SELECT11]](s64)
    ; GFX8: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s128>) = G_BUILD_VECTOR [[MV1]](s128), [[MV2]](s128)
    ; GFX8: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[BUILD_VECTOR]](<2 x s128>)
    ; GFX6-LABEL: name: test_sext_inreg_v2s128_1
    ; GFX6: [[COPY:%[0-9]+]]:_(<2 x s128>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    ; GFX6: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 127
    ; GFX6: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; GFX6: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[C]](s64), [[C1]](s64)
    ; GFX6: [[UV:%[0-9]+]]:_(s128), [[UV1:%[0-9]+]]:_(s128) = G_UNMERGE_VALUES [[COPY]](<2 x s128>)
    ; GFX6: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX6: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 64
    ; GFX6: [[UV2:%[0-9]+]]:_(s64), [[UV3:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[UV]](s128)
    ; GFX6: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[TRUNC]], [[C2]]
    ; GFX6: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC]]
    ; GFX6: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; GFX6: [[ICMP:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC]](s32), [[C2]]
    ; GFX6: [[ICMP1:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC]](s32), [[C3]]
    ; GFX6: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[UV2]], [[TRUNC]](s32)
    ; GFX6: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[UV2]], [[SUB1]](s32)
    ; GFX6: [[SHL1:%[0-9]+]]:_(s64) = G_SHL [[UV3]], [[TRUNC]](s32)
    ; GFX6: [[OR:%[0-9]+]]:_(s64) = G_OR [[LSHR]], [[SHL1]]
    ; GFX6: [[SHL2:%[0-9]+]]:_(s64) = G_SHL [[UV2]], [[SUB]](s32)
    ; GFX6: [[SELECT:%[0-9]+]]:_(s64) = G_SELECT [[ICMP]](s1), [[SHL]], [[C1]]
    ; GFX6: [[SELECT1:%[0-9]+]]:_(s64) = G_SELECT [[ICMP]](s1), [[OR]], [[SHL2]]
    ; GFX6: [[SELECT2:%[0-9]+]]:_(s64) = G_SELECT [[ICMP1]](s1), [[UV3]], [[SELECT1]]
    ; GFX6: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX6: [[UV4:%[0-9]+]]:_(s64), [[UV5:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[UV1]](s128)
    ; GFX6: [[SUB2:%[0-9]+]]:_(s32) = G_SUB [[TRUNC1]], [[C2]]
    ; GFX6: [[SUB3:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC1]]
    ; GFX6: [[ICMP2:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC1]](s32), [[C2]]
    ; GFX6: [[ICMP3:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC1]](s32), [[C3]]
    ; GFX6: [[SHL3:%[0-9]+]]:_(s64) = G_SHL [[UV4]], [[TRUNC1]](s32)
    ; GFX6: [[LSHR1:%[0-9]+]]:_(s64) = G_LSHR [[UV4]], [[SUB3]](s32)
    ; GFX6: [[SHL4:%[0-9]+]]:_(s64) = G_SHL [[UV5]], [[TRUNC1]](s32)
    ; GFX6: [[OR1:%[0-9]+]]:_(s64) = G_OR [[LSHR1]], [[SHL4]]
    ; GFX6: [[SHL5:%[0-9]+]]:_(s64) = G_SHL [[UV4]], [[SUB2]](s32)
    ; GFX6: [[SELECT3:%[0-9]+]]:_(s64) = G_SELECT [[ICMP2]](s1), [[SHL3]], [[C1]]
    ; GFX6: [[SELECT4:%[0-9]+]]:_(s64) = G_SELECT [[ICMP2]](s1), [[OR1]], [[SHL5]]
    ; GFX6: [[SELECT5:%[0-9]+]]:_(s64) = G_SELECT [[ICMP3]](s1), [[UV5]], [[SELECT4]]
    ; GFX6: [[TRUNC2:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX6: [[SUB4:%[0-9]+]]:_(s32) = G_SUB [[TRUNC2]], [[C2]]
    ; GFX6: [[SUB5:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC2]]
    ; GFX6: [[ICMP4:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC2]](s32), [[C2]]
    ; GFX6: [[ICMP5:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC2]](s32), [[C3]]
    ; GFX6: [[ASHR:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[TRUNC2]](s32)
    ; GFX6: [[LSHR2:%[0-9]+]]:_(s64) = G_LSHR [[SELECT]], [[TRUNC2]](s32)
    ; GFX6: [[SHL6:%[0-9]+]]:_(s64) = G_SHL [[SELECT2]], [[SUB5]](s32)
    ; GFX6: [[OR2:%[0-9]+]]:_(s64) = G_OR [[LSHR2]], [[SHL6]]
    ; GFX6: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 63
    ; GFX6: [[ASHR1:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[C4]](s32)
    ; GFX6: [[ASHR2:%[0-9]+]]:_(s64) = G_ASHR [[SELECT2]], [[SUB4]](s32)
    ; GFX6: [[SELECT6:%[0-9]+]]:_(s64) = G_SELECT [[ICMP4]](s1), [[OR2]], [[ASHR2]]
    ; GFX6: [[SELECT7:%[0-9]+]]:_(s64) = G_SELECT [[ICMP5]](s1), [[SELECT]], [[SELECT6]]
    ; GFX6: [[SELECT8:%[0-9]+]]:_(s64) = G_SELECT [[ICMP4]](s1), [[ASHR]], [[ASHR1]]
    ; GFX6: [[MV1:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[SELECT7]](s64), [[SELECT8]](s64)
    ; GFX6: [[TRUNC3:%[0-9]+]]:_(s32) = G_TRUNC [[MV]](s128)
    ; GFX6: [[SUB6:%[0-9]+]]:_(s32) = G_SUB [[TRUNC3]], [[C2]]
    ; GFX6: [[SUB7:%[0-9]+]]:_(s32) = G_SUB [[C2]], [[TRUNC3]]
    ; GFX6: [[ICMP6:%[0-9]+]]:_(s1) = G_ICMP intpred(ult), [[TRUNC3]](s32), [[C2]]
    ; GFX6: [[ICMP7:%[0-9]+]]:_(s1) = G_ICMP intpred(eq), [[TRUNC3]](s32), [[C3]]
    ; GFX6: [[ASHR3:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[TRUNC3]](s32)
    ; GFX6: [[LSHR3:%[0-9]+]]:_(s64) = G_LSHR [[SELECT3]], [[TRUNC3]](s32)
    ; GFX6: [[SHL7:%[0-9]+]]:_(s64) = G_SHL [[SELECT5]], [[SUB7]](s32)
    ; GFX6: [[OR3:%[0-9]+]]:_(s64) = G_OR [[LSHR3]], [[SHL7]]
    ; GFX6: [[ASHR4:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[C4]](s32)
    ; GFX6: [[ASHR5:%[0-9]+]]:_(s64) = G_ASHR [[SELECT5]], [[SUB6]](s32)
    ; GFX6: [[SELECT9:%[0-9]+]]:_(s64) = G_SELECT [[ICMP6]](s1), [[OR3]], [[ASHR5]]
    ; GFX6: [[SELECT10:%[0-9]+]]:_(s64) = G_SELECT [[ICMP7]](s1), [[SELECT3]], [[SELECT9]]
    ; GFX6: [[SELECT11:%[0-9]+]]:_(s64) = G_SELECT [[ICMP6]](s1), [[ASHR3]], [[ASHR4]]
    ; GFX6: [[MV2:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[SELECT10]](s64), [[SELECT11]](s64)
    ; GFX6: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s128>) = G_BUILD_VECTOR [[MV1]](s128), [[MV2]](s128)
    ; GFX6: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[BUILD_VECTOR]](<2 x s128>)
    %0:_(<2 x s128>) = COPY $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7
    %1:_(<2 x s128>) = G_SEXT_INREG %0, 1
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7  = COPY %1
...
